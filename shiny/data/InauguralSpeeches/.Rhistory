print(paste('no shareFriends with ', username, sep=''))
}
}
}
# 备份好友数据
friend <- frienddata
frienddata[, 2] <- as.character(frienddata[, 2])
frienddata[, 4] <- as.character(frienddata[, 4])
# 我的好友
myfrienddata <- frienddata[frienddata[, 2] == uid, ]
# 排除注销的账号及没有共同好友的情况
frienddata_gg <- frienddata[frienddata[, 4] %in% myfrienddata[, 4] & frienddata[, 2] != uid, c(2, 4)]
# myfrienddata <- myfrienddata[myfrienddata[, 4] %in% c(frienddata_gg[, 1], frienddata_gg[, 2]), ]
library(igraph)
people <- unique(data.frame(id=myfrienddata[, 4], name=myfrienddata[, 3]))
gg <- graph.data.frame(d=frienddata_gg, directed=F, vertices=people)
is.simple(gg)
gg <- simplify(gg)
is.simple(gg)
dg <- degree(gg)
gg <- subgraph(gg, which(dg > 0) - 1)
# 子群划分
com <- walktrap.community(gg, steps=5)
subgroup <- split(com$labels, com$membership)
V(gg)$sg <- com$membership + 1
V(gg)$color <- rainbow(max(V(gg)$sg))[V(gg)$sg]
# 中间度
V(gg)$bte <- betweenness(gg, directed=F)
top <- quantile(V(gg)$bte,0.99)
V(gg)$size <- 5
V(gg)[bte>=top]$size <- 15
V(gg)$label <- NA
V(gg)[bte>=top]$label <- V(gg)[bte>=top]$name
V(gg)$cex <- 1
V(gg)[bte>=top]$cex <- 2
png("renren_friend_community_betweenness.png",width=900,height=900)
par(mar=c(0,0,0,0))
set.seed(14)
plot(gg,
layout=layout.fruchterman.reingold,
vertex.size=V(gg)$size, vertex.color=V(gg)$color,
vertex.label=V(gg)$label, vertex.label.cex=V(gg)$cex,
edge.color=grey(0.8)
)
dev.off()
print(V(gg)[bte>=top]$name)
return(list(friend=friend, subgroup=subgroup))
}
}
weibo<-read.csv(file="/users/tugeng/documents/weibo.csv",header = FALSE)
names(weibo)
names(weibo)<("id","follow","fans","tweet")
names(weibo)<c("id","follow","fans","tweet")
names(weibo)
names(weibo)<-c("id","follow","fans","tweet")
names(weibo)
data.frame(weibo[1],rank=rowSums(weibo[2:4]))
library(igraph)
people<-read.csv(file="/users/tugeng/documents/people.csv",header=FALSE)
drawGraph<-function(data){
names(data)<-c("from","to")
g <- graph.data.frame(data, directed=TRUE)
V(g)$label <- V(g)$name
V(g)$size <- 15
E(g)$color <- grey(0.5)
g2 <- simplify(g)
plot(g2,layout=layout.circle)
}
drawGraph(people)
people
library(rvest)
library(jiebaR)
library(stringr)
library(readr)
library(tidyverse)
library(network)
library(sna)
library(ggnetwork)
library(igraph)
install.packages("ready")
install.packages("jiebaR")
install.packages("ready")
install.packages("readr")
install.packages("tidyverse")
install.packages("network")
install.packages("sna")
install.packages("ggnetwork")
library(rvest)
library(jiebaR)
library(stringr)
library(readr)
library(tidyverse)
library(network)
library(sna)
library(ggnetwork)
library(igraph)
url='http://labfile.oss.aliyuncs.com/courses/677/busan.txt'
text=read_html(url)%>%html_text()
spltext=str_split(text,'\r\n\r\n \r\n\r\n')
names(spltext) = 'spltextname'
subtext=spltext$spltextname
n=length(spltext$spltextname)
data=vector('list',n)
cutter = worker('mix')
for(i in 1:n) data[[i]] = cutter[subtext[i]][which(cutter[subtext[i]] %in% iden)] #which(cutter[subtext1] %in% iden)
weidata=data.frame(t(combn(iden,2)))
names(weidata)=c('name1','name2')
weiname=rep(0,136)
for(i in 1:136) weiname[i]=paste(weidata$name1[i],weidata$name2[i],sep = '--')
weidata$weiname=weiname
weidata$weight = rep(0,136)
for(i in 1:72){
if(length(data[[i]]) != 0){ test=as.data.frame(table(paste(expand.grid(data[[i]],data[[i]])$Var1, expand.grid(data[[i]],data[[i]])$Var2,sep = '--')))
test$Var1=as.vector(test$Var1)
test$Freq=test$Freq/max(test$Freq)
id1=which(test$Var1 %in% weidata$weiname)
id2=which( weidata$weiname %in% test$Var1)
weidata$weight[id2]=weidata$weight[id2]+test$Freq[id1]
}
}
taltext=as.data.frame(table(cutter[subtext][which(cutter[subtext] %in% iden)]))
taltext$Var1=as.vector(taltext$Var1)
ind3=rep(0,17)
for(i in 1:17) ind3[i] = taltext$Freq[which(taltext$Var1[i] == iden)] weidata1 = weidata[which(weidata$weight !=0),]
g1=graph.data.frame(weidata1[,-3], directed = F)
op=par(mar=c(0,0,0,0))
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
par(op)
taltext=as.data.frame(table(cutter[subtext][which(cutter[subtext] %in% iden)]))
taltext$Var1=as.vector(taltext$Var1)
ind3=rep(0,17)
for(i in 1:n) data[[i]] = cutter[subtext[i]][which(cutter[subtext[i]] %in% iden)] #which(cutter[subtext1] %in% iden)
weidata=data.frame(t(combn(iden,2)))
names(weidata)=c('name1','name2')
weiname=rep(0,136)
for(i in 1:n) data[[i]] = cutter[subtext[i]][which(cutter[subtext[i]] %in% iden)] #which(cutter[subtext1] %in% iden)
weidata=data.frame(t(combn(iden,2)))
names(weidata)=c('name1','name2')
weiname=rep(0,136)
cutter
for(i in 1:n) data[[i]] = cutter[subtext[i]][which(cutter[subtext[i]] %in% iden)]
library("httr")#链接API
library("XML")#爬取网页数据
library("stringr")#字符串处理
library("ggplot2")#绘图使用
img.url     = 'https://www.whitehouse.gov/sites/whitehouse.gov/files/images/first-family/44_barack_obama[1].jpg'
URL.emoface = 'https://api.projectoxford.ai/emotion/v1.0/recognize'
emotionKEY = '54a97766c39b446faf574859e5826021'
mybody = list(url = img.url)
faceEMO = POST(
url = URL.emoface,
content_type('application/json'), add_headers(.headers = c('Ocp-Apim-Subscription-Key' = emotionKEY)),
body = mybody,
encode = 'json'
)
faceEMO
Obama = httr::content(faceEMO)[[1]]
o<-as.data.frame(as.matrix(Obama$scores))
Obama
URL.emoface = 'https://westus.api.cognitive.microsoft.com/emotion/v1.0/recognize?faceRectangles={faceRectangles}'
mybody = list(url = img.url)
faceEMO = POST(
url = URL.emoface,
content_type('application/json'), add_headers(.headers = c('Ocp-Apim-Subscription-Key' = emotionKEY)),
body = mybody,
encode = 'json'
)
faceEMO
Obama = httr::content(faceEMO)[[1]]
Obama
mybody
URL
url
URL.emoface
faceEMO = POST(
url = URL.emoface,
content_type('application/json'), add_headers(.headers = c('Ocp-Apim-Subscription-Key' = emotionKEY)),
body = mybody,
encode = 'json'
)
faceEMO
cutter[subtext[1]]
cutter[subtext[2]]
cutter[subtext[3]]
mode(cutter[subtext[2]])
iden<-c("秀安","石宇","盛京","尚华","老姐妹","真熙","英国","金常务","流浪汉")
for(i in 1:n) data[[i]] = cutter[subtext[i]][which(cutter[subtext[i]] %in% iden)]
weidata=data.frame(t(combn(iden,2)))
names(weidata)=c('name1','name2')
weiname=rep(0,136)
for(i in 1:136) weiname[i]=paste(weidata$name1[i],weidata$name2[i],sep = '--')
weidata$weiname=weiname
weidata$weight = rep(0,136)
weidata
mode(weidata)
names(weidata)=c('name1','name2','weiname','weight')
weiname[1]
rep
rep(0,136)
weiname
weidata[2]
weidata
weidata<-weidata[1,2,3,4]
weidata<-data.frame(weidata, weiname)
weiname=rep(0,36)
weidata<-data.frame(weidata, weiname)
weidata
weidata$weiname=weiname
weidata
weiname
for(i in 1:36) weiname[i]=paste(weidata$name1[i],weidata$name2[i],sep = '--')
weiname
weidata$weiname=weiname
weidata
weight <- rep(0,36)
weidata<-data.frame(weidata, weight)
weidata
for(i in 1:72){
if(length(data[[i]]) != 0){
test=as.data.frame(table(paste(expand.grid(data[[i]],data[[i]])$Var1,
expand.grid(data[[i]],data[[i]])$Var2,sep = '--')))
test$Var1=as.vector(test$Var1)
test$Freq=test$Freq/max(test$Freq)
id1=which(test$Var1 %in% weidata$weiname)
id2=which( weidata$weiname %in% test$Var1)
weidata$weight[id2]=weidata$weight[id2]+test$Freq[id1]
}
}
weidata
　taltext=as.data.frame(table(cutter[subtext][which(cutter[subtext] %in% iden)]))
　　taltext$Var1=as.vector(taltext$Var1)
　　ind3=rep(0,17)
　　for(i in 1:17) ind3[i] = taltext$Freq[which(taltext$Var1[i] == iden)]
　　weidata1 = weidata[which(weidata$weight !=0),]
　　g1=graph.data.frame(weidata1[,-3], directed = F)
　　op=par(mar=c(0,0,0,0))
　　plot(g1, edge.width = E(g1)$weight,
　　vertex.size=rank(ind3),
　　layout=layout.fruchterman.reingold,
　　vertex.color= ind3,
　　vertex.label.cex=0.75,
　　vertex.label.color='blue'
　　)
　　par(op)
taltext=as.data.frame(table(cutter[subtext][which(cutter[subtext] %in% iden)]))
taltext$Var1=as.vector(taltext$Var1)
ind3=rep(0,17)
for(i in 1:17) ind3[i] = taltext$Freq[which(taltext$Var1[i] == iden)]
ind3
taltext
for(i in 1:17) ind3[i] = taltext$Freq[which(taltext$Var1[i] == iden)]
ind3
weidata1 = weidata[which(weidata$weight !=0),]
g1=graph.data.frame(weidata1[,-3], directed = F)
op=par(mar=c(0,0,0,0))
plot(g1, edge.width = E(g1)$weight,
;
plot(g1, edge.width = E(g1)$weight
vertex.size=rank(ind3)
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
par(op)
par(op,family='STKaiti')
par(family='STKaiti')
pra
par
par()
par(op)
n=fortify(g1)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(linetype = 2, color = "grey50",curvature = 0.1) +
geom_nodes(aes(color = vertex.names, size = weight)) +
geom_nodelabel_repel(aes(color = vertex.names, label = vertex.names),
fontface = "bold", box.padding = unit(1, "lines")) +
theme(legend.position='none',
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank()
)
n=fortify(g1)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
;
n=fortify(g1)
library(ggplot2)
n=fortify(g1)
install.packages("intergraph")
n=fortify(g1)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(linetype = 2, color = "grey50",curvature = 0.1) +
geom_nodes(aes(color = vertex.names, size = weight)) +
geom_nodelabel_repel(aes(color = vertex.names, label = vertex.names),
fontface = "bold", box.padding = unit(1, "lines")) +
theme(legend.position='none',
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank()
)
View(weidata)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(linetype = 2, color = "grey50",curvature = 0.1) +
geom_nodes(aes(color = vertex.names, size = weight)) +
geom_nodelabel_repel(aes(color = vertex.names, label = vertex.names),
fontface = "bold", box.padding = unit(1, "lines")) +
theme(legend.position='none',
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank()
)
install.packages("ggplot2")
install.packages("ggplot2")
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(linetype = 2, color = "grey50",curvature = 0.1) +
geom_nodes(aes(color = vertex.names, size = weight)) +
geom_nodelabel_repel(aes(color = vertex.names, label = vertex.names),
fontface = "bold", box.padding = unit(1, "lines")) +
theme(legend.position='none',
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank()
)
library(ggplot2)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(linetype = 2, color = "grey50",curvature = 0.1) +
geom_nodes(aes(color = vertex.names, size = weight)) +
geom_nodelabel_repel(aes(color = vertex.names, label = vertex.names),
fontface = "bold", box.padding = unit(1, "lines")) +
theme(legend.position='none',
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank()
)
　　library(rvest)
　　library(jiebaR)
　　library(stringr)
　　library(readr)
　　library(tidyverse)
　　library(network)
　　library(sna)
　　library(ggnetwork)
　　library(igraph)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(linetype = 2, color = "grey50",curvature = 0.1) +
geom_nodes(aes(color = vertex.names, size = weight)) +
geom_nodelabel_repel(aes(color = vertex.names, label = vertex.names),
fontface = "bold", box.padding = unit(1, "lines")) +
theme(legend.position='none',
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank()
)
install.packages(c("boot", "curl", "flexmix", "foreign", "htmltools", "lme4", "MASS", "Matrix", "plotrix", "quantmod", "quantreg", "R6", "RcppEigen", "rpart", "shiny", "SparseM", "tidyr", "XML"))
par(family='STKaiti')
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
library(rvest)
library(jiebaR)
library(stringr)
library(readr)
library(tidyverse)
library(network)
library(sna)
library(ggnetwork)
library(igraph)
par(family='STKaiti')
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
iden
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
main="中文"
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
family='STKaiti')
plot(g1, edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue',
family='STKaiti')
plot(g1, family='STKaiti',edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
plot(g1)
mode(g1)
g1
par(g1,family='STKaiti')
plot(g1, family='STKaiti',edge.width = E(g1)$weight,
vertex.size=rank(ind3),
layout=layout.fruchterman.reingold,
vertex.color= ind3,
vertex.label.cex=0.75,
vertex.label.color='blue'
)
par(g1)
par(g1,family='STKaiti')
plot(g1)
plot(g1)
plot(g1)
plot(g1, family='STKaiti')
library(rvest)
library(jiebaR)
library(stringr)
library(readr)
library(tidyverse)
library(network)
library(sna)
library(ggnetwork)
library(igraph)
plot(g1)
library(shiny)
library(rvest)
library(jiebaR)
library(stringr)
library(readr)
library(tidyverse)
library(network)
library(sna)
library(ggnetwork)
library(igraph)
plot(g1)
library(rvest)
library(jiebaR)
library(stringr)
library(readr)
library(tidyverse)
library(network)
library(sna)
library(ggnetwork)
library(igraph)
plot(g1)
plot(c(1,2,3),c(2,3,4),main = "哈哈")
install.packages("showtext")
install.packages("showtext")
install.packages("sysfonts")
install.packages("showtext")
plot(g1)
plot(g1)
plot(g1)
plot(g1)
par(family)
par(family="STXihei")
plot(g1)
plot(g1)
plot(g1)
plot(1)
plot(g1)
g1
plot(g1)
par(family="STXihei")
plot(g1)
demo
demo(ggpolot)
demo(ggplot)
demo(plot)
demo(mean)
shiny::runApp('Downloads/Desktop/shiny')
shiny::runApp('Downloads/Desktop/shiny')
runApp('Downloads/Desktop/shiny')
